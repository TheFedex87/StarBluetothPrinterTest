plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs'
    id 'kotlin-parcelize'
}

android {
    compileSdk 30

    defaultConfig {
        applicationId "it.thefedex87.bluetoothprinttest"
        minSdk 21
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation 'com.github.mazenrashed:Printooth:1.2.2'
    implementation 'com.github.DantSu:ESCPOS-ThermalPrinter-Android:3.0.0'
    implementation files('libs/StarIOPort3.1.jar')
    implementation files('libs/starioextension.jar')

    //implementation 'com.starmicronics:stario:2.9.0'
    //implementation 'com.starmicronics:starioextension:1.15.0'
    //implementation 'com.starmicronics:smcloudservices:1.4.1'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'

    def swiperefreshlayout_verion = "1.1.0"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefreshlayout_verion"

    // Kotlin coroutines
    def kotlin_coroutines_version = "1.4.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    // ViewModel & LiveData
    def lifecycle_version = "2.3.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Fragment
    def fragment_version = "1.3.6"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    // Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation("androidx.hilt:hilt-work:1.0.0")
    kapt("androidx.hilt:hilt-compiler:1.0.0")

    // Room
    def room_version = '2.3.0'
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // DataStore
    def data_store_version = "1.0.0-beta02"
    implementation "androidx.datastore:datastore-preferences:$data_store_version"

    // Camera
    def camerax_version = "1.0.1"
    def camerax_view_version = "1.0.0-alpha28"
    // CameraX core library using camera2 implementation
    implementation "androidx.camera:camera-camera2:$camerax_version"
    // CameraX Lifecycle Library
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    // CameraX View class
    implementation "androidx.camera:camera-view:$camerax_view_version"

    // Work manager
    def work_version = "2.5.0"
    implementation "androidx.work:work-runtime-ktx:$work_version"

    // EasyPermissions
    def easy_permissions_version = "3.0.0"
    implementation "pub.devrel:easypermissions:$easy_permissions_version"

    // Tests
    def junit_version = '4.13.2'
    def espresso_version = '3.3.0'
    def test_ext_junit_version = '1.1.2'
    def fragment_testing_version = '1.3.6'
    def mockito_version = '3.11.1'
    def truth_version = '1.1.2'
    def mockito_kotlin_version = '3.2.0'
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "junit:junit:$junit_version"
    //androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:2.12.1"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.2.1"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.2.1"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "com.google.truth:truth:$truth_version"
    testImplementation "com.google.truth:truth:$truth_version"
    androidTestImplementation "androidx.test.ext:junit:$test_ext_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_version"
    androidTestImplementation 'androidx.test:core-ktx:1.3.0'
    testImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    androidTestImplementation "org.mockito.kotlin:mockito-kotlin:$mockito_kotlin_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    androidTestImplementation 'app.cash.turbine:turbine:0.4.1'
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"
    androidTestImplementation "androidx.fragment:fragment-testing:$fragment_testing_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    def multidex_version = "2.0.1"
    implementation "androidx.multidex:multidex:$multidex_version"
}
